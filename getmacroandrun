const RunMacroHandler = {
  canHandle(handlerInput) {
    return (handlerInput.requestEnvelope.request.type === 'IntentRequest'
      && handlerInput.requestEnvelope.request.intent.name === 'RunMacroIntent'
      && handlerInput.requestEnvelope.request.intent.confirmationStatus === 'NONE'
      && handlerInput.requestEnvelope.request.dialogState === 'COMPLETED'
      
      );
  },
  
  async handle(handlerInput) {
    let outputSpeech = 'No data received for post ';
    var macroname = handlerInput.requestEnvelope.request.intent.slots.macroname.value;
    
    var macroid =  getApiData('/api/macros')
      .then((response) => {
        const data = JSON.parse(response);
      for (var i = 0, l = data.length; i < l; i++){
      if (data[i]['name'] === macroname) {
      return data[i]['id'];
          }
        }
        
      });
      
    await postApiData('/api/macros/'+macroid+'/run')
      .then((response) => {
        outputSpeech = 'Ran macro ' + macroname + ' with id ' + macroid;
      })
      .catch((err) => {
        //set an optional error message here
        outputSpeech = err.message;
      });

    return handlerInput.responseBuilder
      .speak(outputSpeech)
      .getResponse();

  },
};
